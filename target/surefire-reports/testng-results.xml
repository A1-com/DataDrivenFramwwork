<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="8" failed="0" total="9" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Example test run" duration-ms="30948" started-at="2016-10-09T06:03:55Z" finished-at="2016-10-09T06:04:26Z">
    <groups>
    </groups>
    <test name="Registration Test" duration-ms="7260" started-at="2016-10-09T06:03:55Z" finished-at="2016-10-09T06:04:03Z">
      <class name="com.easybix.DDF.Tests.RegistrationTest">
        <test-method status="FAIL" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:33:56Z" finished-at="2016-10-09T11:33:56Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot get automation extension
from chrome not reachable
  (Session info: chrome=53.0.2785.143)
  (Driver info: chromedriver=2.24.417431 (9aea000394714d2fbb20850021f6204f2256b9cf),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 4.02 seconds
Build info: version: 'unknown', revision: 'f233563', time: '2016-07-28 17:43:42 -0700'
System info: host: 'alkesh-asus', ip: '192.168.0.101', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.24.417431 (9aea000394714d2fbb20850021f6204f2256b9cf), userDataDir=C:\Users\alkesh\AppData\Local\Temp\scoped_dir6804_16987}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=53.0.2785.143, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1d2219970bc76dc5101a3b1b87a1c0e6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot get automation extension
from chrome not reachable
  (Session info: chrome=53.0.2785.143)
  (Driver info: chromedriver=2.24.417431 (9aea000394714d2fbb20850021f6204f2256b9cf),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 4.02 seconds
Build info: version: 'unknown', revision: 'f233563', time: '2016-07-28 17:43:42 -0700'
System info: host: 'alkesh-asus', ip: '192.168.0.101', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.24.417431 (9aea000394714d2fbb20850021f6204f2256b9cf), userDataDir=C:\Users\alkesh\AppData\Local\Temp\scoped_dir6804_16987}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=53.0.2785.143, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 1d2219970bc76dc5101a3b1b87a1c0e6
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:950)
	at com.easybix.DDF.core.TestBase.init(TestBase.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="doRegistration(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistration" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Vibhor, confirmpassword=Sharma, email=Vibhor@mail.com, lastname=Sharma}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistration -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="doRegistration(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistration" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Rubi, confirmpassword=Chauhan, email=Rubi@nail.com, lastname=Chauhan}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistration -->
        <test-method status="SKIP" signature="doRegistration(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistration" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Michael, confirmpassword=Martin, email=Michael@mail.com, lastname=Martin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistration -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="doRegistration(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistration" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Anshul, confirmpassword=Chauhan, email=Anshul@mail.com, lastname=Chauhan}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistration -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="doRegistrationCopy(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistrationCopy" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationCopyData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Michael, confirmpassword=Martin, email=Michael@mail.com, lastname=Martin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistrationCopy -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="doRegistrationCopy(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistrationCopy" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationCopyData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Rubi, confirmpassword=Chauhan, email=Rubi@nail.com, lastname=Chauhan}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistrationCopy -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="init" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="tearDown" is-config="true" duration-ms="0" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="doRegistrationCopy(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistrationCopy" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationCopyData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Anshul, confirmpassword=Chauhan, email=Anshul@mail.com, lastname=Chauhan}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistrationCopy -->
        <test-method status="SKIP" signature="doRegistrationCopy(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.RegistrationTest@380fb434]" name="doRegistrationCopy" duration-ms="0" started-at="2016-10-09T11:34:03Z" data-provider="getRegistrationCopyData" finished-at="2016-10-09T11:34:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, firstname=Vibhor, confirmpassword=Sharma, email=Vibhor@mail.com, lastname=Sharma}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doRegistrationCopy -->
      </class> <!-- com.easybix.DDF.Tests.RegistrationTest -->
    </test> <!-- Registration Test -->
    <test name="Login Test" duration-ms="23672" started-at="2016-10-09T06:04:03Z" finished-at="2016-10-09T06:04:26Z">
      <class name="com.easybix.DDF.Tests.LoginTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.easybix.DDF.Tests.LoginTest@2ef9b8bc]" name="init" is-config="true" duration-ms="7475" started-at="2016-10-09T11:34:03Z" finished-at="2016-10-09T11:34:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="doLogin(java.util.HashMap)[pri:0, instance:com.easybix.DDF.Tests.LoginTest@2ef9b8bc]" name="doLogin" duration-ms="15365" started-at="2016-10-09T11:34:10Z" data-provider="getLoginData" finished-at="2016-10-09T11:34:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{=, UserName=yuvikasharma@opages.com, PageTitle=Oye Welcome!, Password=yuvikasharma}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.easybix.DDF.Tests.LoginTest@2ef9b8bc]" name="tearDown" is-config="true" duration-ms="801" started-at="2016-10-09T11:34:25Z" finished-at="2016-10-09T11:34:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.easybix.DDF.Tests.LoginTest -->
    </test> <!-- Login Test -->
  </suite> <!-- Example test run -->
</testng-results>
